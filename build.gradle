buildscript {
    ext.kotlin_version = '1.0.2'
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'kotlin'

//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.


version = "1.0"
group= "com.yourname.modid" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "modid"

sourceCompatibility = targetCompatibility = "1.6" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.6"
}

repositories {
    maven { url "http://mvn.rx14.co.uk/shadowfacts/" }
}
minecraft {
    version = "1.11.2-13.20.0.2230"
    runDir = "run"
    mappings = "snapshot_20170215"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

}

reobf {
    jar {
        extraLines "PK: gnu/trove thecodewarrior/logistic/shade/gnu/trove"
    }
}

configurations {
    // create a thingy we can use later to find the specific deps we want shaded
    shade
    compile.extendsFrom shade
}

dependencies {
    compile "net.shadowfacts:Forgelin:1.2.0"
//    shade "org.jgrapht:jgrapht-core:1.0.1"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}


jar {
    configurations.shade.each { dep -> // insert everything from the shade thingy into the jar
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}
